name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - oracle

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:
    branches:
      - master

  schedule:
    - cron: "0 2 * * *"

  workflow_dispatch:
    inputs:
      name:
        description: '备注'
        required: false
        default: 'Mona the Octocat'

  check_suite:
    types: [ rerequested, completed ]

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: scjtqs/nextcloud:amd64

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          if [ -f docker-compose.test.yml ]; then
            docker-compose --file docker-compose.test.yml build
            docker-compose --file docker-compose.test.yml run sut
          else
            docker build . --file Dockerfile
          fi

  amd64:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    #    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'oracle'

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login  -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

#      - name: Log into aliyun
#        run: echo "${{ secrets.DOCKER_PASSWORD2 }}" | docker login  -u ${{ secrets.DOCKER_USERNAME2 }} --password-stdin registry.cn-hangzhou.aliyuncs.com

      - name: build amd64
        run: ./build_multi.sh

  aarch64:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    #    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'oracle'

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login  -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

#      - name: Log into aliyun
#        run: echo "${{ secrets.DOCKER_PASSWORD2 }}" | docker login  -u ${{ secrets.DOCKER_USERNAME2 }} --password-stdin registry.cn-hangzhou.aliyuncs.com

      - name: build aarch64
        run: ./build_multi_alpine.sh

  mainfest-tool:

    needs:
      - amd64
      - aarch64
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'oracle'

      - name: Log into registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login  -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: mainfest push
        run: |
          wget https://github.com/estesp/manifest-tool/releases/download/v2.0.0/binaries-manifest-tool-2.0.0.tar.gz
          tar -zxvf binaries-manifest-tool-2.0.0.tar.gz
          ./manifest-tool-linux-amd64 --username ${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }} push from-spec oracle.yaml

